<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.hush.infrastructure.persistent.dao.IRaffleActivityOrderDao">

    <resultMap id="dataMap" type="cn.hush.infrastructure.persistent.po.RaffleActivityOrderPO">
        <id column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="sku" property="sku"/>
        <result column="activity_id" property="activityId"/>
        <result column="activity_name" property="activityName"/>
        <result column="strategy_id" property="strategyId"/>
        <result column="order_id" property="orderId"/>
        <result column="order_time" property="orderTime"/>
        <result column="total_count" property="totalCount"/>
        <result column="day_count" property="dayCount"/>
        <result column="month_count" property="monthCount"/>
        <result column="pay_price_amount" property="payPriceAmount"/>
        <result column="state" property="state"/>
        <result column="out_business_no" property="outBusinessNo"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
    </resultMap>

    <insert id="insert" parameterType="cn.hush.infrastructure.persistent.po.RaffleActivityOrderPO">
        insert into raffle_activity_order
        (user_id, sku, activity_id, activity_name, strategy_id, order_id,
         order_time, state, out_business_no, total_count, day_count, month_count,
         pay_price_amount,
         create_time, update_time)
        values
            (#{userId}, #{sku}, #{activityId}, #{activityName}, #{strategyId}, #{orderId},
             #{orderTime}, #{state}, #{outBusinessNo}, #{totalCount}, #{dayCount}, #{monthCount},
             #{payPriceAmount},
             now(), now())
    </insert>

    <update id="updateOrderCompleted" parameterType="cn.hush.infrastructure.persistent.po.RaffleActivityOrderPO">
        update raffle_activity_order
        set
            state = 'completed',
            update_time = now()
        where state = 'wait_pay' and user_id = #{userId} and out_business_no = #{outBusinessNo}
    </update>


    <select id="queryRaffleActivityOrderByUserId" parameterType="java.lang.String" resultMap="dataMap">
        select user_id, sku, activity_id, activity_name, strategy_id, order_id, order_time, state, pay_price_amount
        from raffle_activity_order
        where user_id = #{userId}
    </select>

    <select id="queryRaffleActivityOrder" resultMap="dataMap" parameterType="cn.hush.infrastructure.persistent.po.RaffleActivityOrderPO">
        select user_id, sku, activity_id, activity_name, strategy_id, order_id, order_time, total_count, day_count,
               month_count, pay_price_amount, state, out_business_no
        from raffle_activity_order
        where user_id = #{userId} and out_business_no = #{outBusinessNo}
    </select>

    <select id="queryUnpaidActivityOrder"
          resultMap="dataMap" parameterType="cn.hush.infrastructure.persistent.po.RaffleActivityOrderPO">
    select user_id, order_id, pay_price_amount, out_business_no
        from raffle_activity_order
    where user_id = #{userId} and sku = #{sku} and state = 'wait_pay'
    and order_time >= NOW() - INTERVAL 1 MONTH
    limit 1

    </select>

</mapper>
